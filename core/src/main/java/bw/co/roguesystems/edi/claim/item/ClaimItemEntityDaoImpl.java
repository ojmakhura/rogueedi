// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.co.roguesystems.edi.claim.item;

import bw.co.roguesystems.edi.claim.ClaimEntityRepository;
import org.springframework.stereotype.Repository;

/**
 * @see ClaimItemEntity
 */
@Repository("claimItemEntityDao")
public class ClaimItemEntityDaoImpl
    extends ClaimItemEntityDaoBase
{
    
    public ClaimItemEntityDaoImpl(
        ClaimEntityRepository claimEntityRepository,
        ClaimItemEntityRepository claimItemEntityRepository
    ) {

        super(
            claimEntityRepository,
            claimItemEntityRepository
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toClaimItem(
        ClaimItemEntity source,
        ClaimItem target)
    {
        // TODO verify behavior of toClaimItem
        super.toClaimItem(source, target);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClaimItem toClaimItem(final ClaimItemEntity entity)
    {
        // TODO verify behavior of toClaimItem
        return super.toClaimItem(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private ClaimItemEntity loadClaimItemEntityFromClaimItem(ClaimItem claimItem)
    {
        // TODO implement loadClaimItemEntityFromClaimItem
        throw new UnsupportedOperationException("bw.co.roguesystems.edi.claim.item.loadClaimItemEntityFromClaimItem(ClaimItem) not yet implemented.");

        /* A typical implementation looks like this:
        if (claimItem.getId() == null)
        {
            return  ClaimItemEntity.Factory.newInstance();
        }
        else
        {
            return this.load(claimItem.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public ClaimItemEntity claimItemToEntity(ClaimItem claimItem)
    {
        // TODO verify behavior of claimItemToEntity
        ClaimItemEntity entity = this.loadClaimItemEntityFromClaimItem(claimItem);
        this.claimItemToEntity(claimItem, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void claimItemToEntity(
        ClaimItem source,
        ClaimItemEntity target,
        boolean copyIfNull)
    {
        // TODO verify behavior of claimItemToEntity
        super.claimItemToEntity(source, target, copyIfNull);
    }
}