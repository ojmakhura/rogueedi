// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.co.roguesystems.edi.claim.submission;

import bw.co.roguesystems.edi.claim.ClaimEntityRepository;
import org.springframework.stereotype.Repository;

/**
 * @see ClaimSubmissionEntity
 */
@Repository("claimSubmissionEntityDao")
public class ClaimSubmissionEntityDaoImpl
    extends ClaimSubmissionEntityDaoBase
{
    
    public ClaimSubmissionEntityDaoImpl(
        ClaimEntityRepository claimEntityRepository,
        ClaimSubmissionEntityRepository claimSubmissionEntityRepository
    ) {

        super(
            claimEntityRepository,
            claimSubmissionEntityRepository
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toClaimSubmission(
        ClaimSubmissionEntity source,
        ClaimSubmission target)
    {
        // TODO verify behavior of toClaimSubmission
        super.toClaimSubmission(source, target);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClaimSubmission toClaimSubmission(final ClaimSubmissionEntity entity)
    {
        // TODO verify behavior of toClaimSubmission
        return super.toClaimSubmission(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private ClaimSubmissionEntity loadClaimSubmissionEntityFromClaimSubmission(ClaimSubmission claimSubmission)
    {
        // TODO implement loadClaimSubmissionEntityFromClaimSubmission
        throw new UnsupportedOperationException("bw.co.roguesystems.edi.claim.submission.loadClaimSubmissionEntityFromClaimSubmission(ClaimSubmission) not yet implemented.");

        /* A typical implementation looks like this:
        if (claimSubmission.getId() == null)
        {
            return  ClaimSubmissionEntity.Factory.newInstance();
        }
        else
        {
            return this.load(claimSubmission.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public ClaimSubmissionEntity claimSubmissionToEntity(ClaimSubmission claimSubmission)
    {
        // TODO verify behavior of claimSubmissionToEntity
        ClaimSubmissionEntity entity = this.loadClaimSubmissionEntityFromClaimSubmission(claimSubmission);
        this.claimSubmissionToEntity(claimSubmission, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void claimSubmissionToEntity(
        ClaimSubmission source,
        ClaimSubmissionEntity target,
        boolean copyIfNull)
    {
        // TODO verify behavior of claimSubmissionToEntity
        super.claimSubmissionToEntity(source, target, copyIfNull);
    }
}