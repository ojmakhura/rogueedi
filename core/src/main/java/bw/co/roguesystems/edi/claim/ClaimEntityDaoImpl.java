// Generated by hibernate/SpringHibernateDaoImpl.vsl in andromda-spring-cartridge on $springUtils.date.
// license-header java merge-point
/**
 * This is only generated once! It will never be overwritten.
 * You can (and have to!) safely modify it by hand.
 */
package bw.co.roguesystems.edi.claim;

import bw.co.roguesystems.edi.claim.item.ClaimItemEntityRepository;
import bw.co.roguesystems.edi.claim.submission.ClaimSubmissionEntityRepository;
import org.springframework.stereotype.Repository;

/**
 * @see ClaimEntity
 */
@Repository("claimEntityDao")
public class ClaimEntityDaoImpl
    extends ClaimEntityDaoBase
{
    
    public ClaimEntityDaoImpl(
        ClaimItemEntityRepository claimItemEntityRepository,
        ClaimSubmissionEntityRepository claimSubmissionEntityRepository,
        ClaimEntityRepository claimEntityRepository
    ) {

        super(
            claimItemEntityRepository,
            claimSubmissionEntityRepository,
            claimEntityRepository
        );
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void toClaim(
        ClaimEntity source,
        Claim target)
    {
        // TODO verify behavior of toClaim
        super.toClaim(source, target);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Claim toClaim(final ClaimEntity entity)
    {
        // TODO verify behavior of toClaim
        return super.toClaim(entity);
    }

    /**
     * Retrieves the entity object that is associated with the specified value object
     * from the object store. If no such entity object exists in the object store,
     * a new, blank entity is created
     */
    private ClaimEntity loadClaimEntityFromClaim(Claim claim)
    {
        // TODO implement loadClaimEntityFromClaim
        throw new UnsupportedOperationException("bw.co.roguesystems.edi.claim.loadClaimEntityFromClaim(Claim) not yet implemented.");

        /* A typical implementation looks like this:
        if (claim.getId() == null)
        {
            return  ClaimEntity.Factory.newInstance();
        }
        else
        {
            return this.load(claim.getId());
        }
        */
    }

    /**
     * {@inheritDoc}
     */
    public ClaimEntity claimToEntity(Claim claim)
    {
        // TODO verify behavior of claimToEntity
        ClaimEntity entity = this.loadClaimEntityFromClaim(claim);
        this.claimToEntity(claim, entity, true);
        return entity;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void claimToEntity(
        Claim source,
        ClaimEntity target,
        boolean copyIfNull)
    {
        // TODO verify behavior of claimToEntity
        super.claimToEntity(source, target, copyIfNull);
    }
}